@using redball.Models
@{
    ViewData["Title"] = "Edit";

    var overrides = ViewData["Overrides"] as IEnumerable<TblShipperRateOverride>;
    var rateTable = ViewData["Benchmark"] as IEnumerable<TblTnsbenchmarkRate>;
}

<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>

<p>Shippers will use this page to edit their tenders to TNS.</p>

<table class="table">
    <thead>
        <tr>
            <th>Origin</th>
            <th>Destination</th>
            <th>Minimum Charge</th>
            <th>Cost Per Mile</th>
            <th>Tendered Cost Per Mile</th>
        </tr>
    </thead>

    @foreach (var row in rateTable.ToList())
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => row.TbrOriginStateCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => row.TbrTargetStateCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => row.TbrMinimumCharge)
            </td>
            <td>
                @Html.DisplayFor(modelItem => row.TbrCostPerMile)
            </td>
            <td>
                @foreach (var shipperOverride in overrides.Where(x =>
                    x.SroOriginStateCode == row.TbrOriginStateCode
                    && x.SroTargetStateCode == row.TbrTargetStateCode
                    ))
                {
                    var rateAdjustment = shipperOverride.SroCostPerMilePercentageAdjustment;
                    var adjustedRate = row.TbrCostPerMile + (row.TbrCostPerMile * (decimal)rateAdjustment);
                    <p>Percentage rate adjustment: @rateAdjustment</p>
                    <p>Final cost per mile: @adjustedRate</p>
                }
            </td>
        </tr>
    }
</table>
